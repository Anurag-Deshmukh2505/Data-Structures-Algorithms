50 Must-Do Linked List Problems for FAANG
 ðŸŸ¢ Easy (Warmup / Fundamentals) â€“ 15 Qs
1. Reverse Linked List (iterative & recursive) â€“ 206
2. Middle of the Linked List â€“ 876***
3. Remove Linked List Elements â€“ 203
4. Palindrome Linked List â€“ 234
5. Convert Binary Number in a Linked List to Integer â€“ 1290
6. Merge Two Sorted Lists â€“ 21
7. Intersection of Two Linked Lists â€“ 160
8. Linked List Cycle (Floydâ€™s Tortoise & Hare) â€“ 141
9. Design Linked List (singly/doubly ops) â€“ 707
10. Delete Node in a Linked List â€“ 237 (tricky O(1) deletion)
11. Swap Nodes in Pairs â€“ 24
12. Add Two Numbers II (without reversing) â€“ 445 (list-based addition)
13. Remove Duplicates from Sorted List â€“ 83
14. Remove Duplicates from Sorted List II â€“ 82
15. Reverse Linked List II (partial reversal) â€“ 92
---

 ðŸŸ¡ Medium (Core FAANG-Level) â€“ 25 Qs
16. Linked List Cycle II â€“ 142 (find cycle entry with Floydâ€™s)
17. Partition List â€“ 86
18. Reorder List â€“ 143
19. Rotate List â€“ 61
20. Remove Nth Node From End of List â€“ 19 (two-pointer trick)
21. Odd Even Linked List â€“ 328
22. Split Linked List in Parts â€“ 725
23. Flatten a Multilevel Doubly Linked List â€“ 430
24. Flatten Binary Tree to Linked List â€“ 114 (conversion practice)
25. Copy List with Random Pointer â€“ 138 (deep copy)
26. LRU Cache â€“ 146 (doubly LL + hashmap)
27. Design Browser History â€“ 1472 (doubly LL)
28. Plus One Linked List â€“ 369 (recursive addition)
29. Add Two Numbers (linked list addition) â€“ 2
30. Insertion Sort List â€“ 147
31. Sort List â€“ 148 (merge sort on linked list)
32. Convert Sorted List to BST â€“ 109 (fast-slow pointer recursion)
33. Intersection of Two Cycled Linked Lists (custom variant)
34. Reverse Nodes in k-Group â€“ 25
35. Swap Nodes in Linked List (by values) â€“ 1721
36. Design Circular Deque â€“ 641 (circular linked list simulation)
37. Linked List Random Node â€“ 382 (reservoir sampling)
38. Rotate Right Linked List (mod n trick) â€“ 61
39. Remove Zero Sum Consecutive Nodes from Linked List â€“ 1171
40. Add Numbers in Forward Order (custom, stack + LL)
---

 ðŸ”´ Hard (Advanced Linked List Challenges) â€“ 10 Qs
41. Merge k Sorted Lists â€“ 23 (min-heap / divide & conquer)
42. Reverse Nodes in k-Group â€“ 25 (hard pointer manipulation)
43. LFU Cache â€“ 460 (doubly LL + hashmap)
44. Design Skiplist â€“ 1206 (advanced linked structure)
45. All O(1) Data Structure â€“ 432 (linked hash structure)
46. Find Median from Data Stream â€“ 295 (linked heaps)
47. Flatten Multilevel Doubly Linked List (harder variant) â€“ 430 advanced test cases
48. Clone Linked List with Random Pointers (optimal O(1) space) â€“ 138 optimized
49. Split Circular Linked List into Two Halves (custom, often asked)
50. Detect & Remove Cycle in Linked List (Floyd + modification) (custom, very common FAANG)
---